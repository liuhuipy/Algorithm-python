"""
根据身高重建队列：
    假设有打乱顺序的一群人站成一个队列。 每个人由一个整数对(h, k)表示，其中h是这个人的身高，
    k是排在这个人前面且身高大于或等于h的人数。 编写一个算法来重建这个队列。

注意：
    总人数少于1100人。

示例
输入:
    [[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]

输出:
    [[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]

方法：
    第一步：将序列按身高h降序并按k升序排列。
    第二步：遍历排序序列将每个元素插入到新的序列k的位置（由于已按照身高h排序，将元素放入index为k的位置能保证前面只有k个元素的h比它大，且
            不会影响其他元素）。
    路径：
        1.排序后序列：[[7, 0], [7, 1], [6, 1], [5, 2], [5, 0], [4, 4]]
        2.初始化结果序列res为空序列：[]。
        3.遍历排序序列第1元素将[7,0]插入index=0的位置即：res [[7, 0]]
        4.遍历排序序列第2元素将[7,1]插入index=1的位置即：res [[7, 0], [7, 1]]
        5.遍历排序序列第3元素将[6,1]插入index=1的位置即：res [[7, 0], [6, 1], [7, 1]]
        6.遍历排序序列第3元素将[5,2]插入index=2的位置即：res [[7, 0], [6, 1], [5, 2], [7, 1]]
        7.遍历排序序列第3元素将[5,0]插入index=0的位置即：res [[5, 0], [7, 0], [6, 1], [5, 2], [7, 1]]
        8.遍历排序序列第3元素将[4,4]插入index=4的位置即：res [[5, 0], [7, 0], [6, 1], [5, 2], [4, 4], [7, 1]]
"""
from typing import List


class Solution:
    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:
        people.sort(key=lambda x: (-x[0], x[1]))
        res = []
        for p in people:
            res.insert(p[1], p)
        return res


# if __name__ == '__main__':
#     solution = Solution()
#     print(solution.reconstructQueue([[7, 0], [4, 4], [7, 1], [5, 2], [6, 1], [5, 0]]))

